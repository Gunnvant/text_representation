print(sum(is.na(air[,i])))
}
for(i in names(air))
{
print(i,sum(is.na(air[,i])))
}
for(i in names(air))
{
print(c(i,sum(is.na(air[,i]))))
}
summary(air)
sum(is.na(air[,]))
sum(is.na(air[,"Ozone"]))
summary(air)
names(air)[1:2]
missing=list()
for(i in names(air))
{
missing[i]=sum(is.na(air[,i]))
}
missing
sort(missing)
1:length(names(air))
1:length(names(air))-5
length(names(air)):1
missing=list()
for(i in length(names(air)):1)
{
missing[i]=sum(is.na(air[,i]))
}
missing
names(air)[:1]
## How do you replace a missing value with some number/quantity
air$Ozone
# let's replace missing with 60
which(is.na(air$Ozone))
# let's replace missing with 60
ind_missing=which(is.na(air$Ozone))
air$Ozone[ind_missing]
air$Ozone[ind_missing]=60
air$Ozone
is.na(air$Solar.R)
air$Solar.R[is.na(air$Solar.R)]
air$Solar.R[is.na(air$Solar.R)]=20
air$Solar.R
## String functions:
string_data=read.csv("/Users/gunnvantsaini/Data/Work/Python Trainings/BasicPythonDataScience/Data/Strings.csv")
View(string_data)
head(string_data)
str(string_data)
## String replacement
# gsub("pattern_to_be_replaced","replacement",vector)
gsub(",","",string_data$Expenses)
head(string_data)
## String replacement
# gsub("pattern_to_be_replaced","replacement",vector)
string_data$Expenses=gsub(",","",string_data$Expenses)
head(string_data)
string_data%>%summarise(mean(Expenses))
str(string_data)
string_data$Expenses=as.numeric(string_data$Expenses)
string_data%>%summarise(mean(Expenses))
b=c("45-55","56-60","61-64","65-70")
strsplit(b,"-")
mode(strsplit(b,"-"))
strsplit(b,"-")
l=strsplit(b,"-")
for(i in l)
{
print(i)
}
for(i in l)
{
print(i[1])
}
for(i in l)
{
print(i[2])
}
l[[1]]
l[[2]]
l[[2]][1]
b=c("1M","1B","1M","3B")
grep("M",b)
ind=grep("M",b)
b=gsub("M","",b)
b=gsub("B","",b)
b
b=as.numeric(b)
b
b[ind]
b[ind]=b[ind]/1000
b
b=c("1M","1B","1M","3B","5B")
a=c(1,2,3,4,5)
table=data.frame(area=a,exp=b)
table
#grep("pattern",where you want to search)
grep("M",table$exp)
#grep("pattern",where you want to search)
ind=grep("M",table$exp)
table[ind,]
table$exp=gsub("M","",table$exp)
table$exp=gsub("B","",table$exp)
table
str(table)
table$exp=as.numeric(table$exp)
table[ind,"exp"]
table$exp[ind]=table$exp[ind]/1000
table
## joins:
transactions=read.table("/Users/gunnvantsaini/Desktop/Bootcamp 5/Data Manipulation R2/Data/Transactions_File.txt",sep="\t",header=T)
products=read.table("/Users/gunnvantsaini/Desktop/Bootcamp 5/Data Manipulation R2/Data/Products_File.txt",sep="\t",header=T)
head(products)
head(transactions)
### Which product category sells the most?
transactions%>%left_join(products,by="Product_Code")
### Which product category sells the most?
transactions%>%left_join(products,by="Product_Code")%>%group_by("Product_Category")>%>%summarise(Count=n())%>%arrange(desc(Count))
### Which product category sells the most?
transactions%>%left_join(products,by="Product_Code")%>%group_by("Product_Category")%>%summarise(Count=n())%>%arrange(desc(Count))
transactions%>%left_join(products,by="Product_Code")
### Which product category sells the most?
transactions%>%left_join(products,by="Product_Code")%>%group_by(Product_Category)%>%summarise(Count=n())%>%arrange(desc(Count))
### Class excercise 2
# 2
contribution=read.csv("/Users/gunnvantsaini/Desktop/Bootcamp 5/Data Manipulation R2/Data/contributions.csv")
candidates=read.csv("/Users/gunnvantsaini/Desktop/Bootcamp 5/Data Manipulation R2/Data/candidates.csv")
contribution$date
contribution$date=ymd(contribution$date)
contribution$weekday=weekdays(contribution$date)
contribution%>%filter(weekday=='Sunday')%>%arrange(desc(amount))
contribution%>%filter(weekday=='Sunday')%>%arrange(desc(amount))%>%select(amount)
View(candidates)
head(candidates)
## 3
contribution%>%left_join(candidates,by=c("candidate_id"="id"))
## 3
contribution$is_weekday=ifelse(contribution$weekday=="Sunday"|contribution$weekday=="Saturday","Weekend","Weekday")
contribution%>%left_join(candidates,by=c("candidate_id"="id"))%>%filter(party="D")%>%group_by(is_weekday)%>%summarise(mean(amount))
contribution%>%left_join(candidates,by=c("candidate_id"="id"))%>%filter(party=="D")%>%group_by(is_weekday)%>%summarise(mean(amount))
## 4
contribution%>%left_join(candidates,by=c("candidate_id"="id"))%>%filter(party=="D")%>%filter(is_weekday=='Weekday')%>%arrange(desc(amount))
## 4
contribution%>%left_join(candidates,by=c("candidate_id"="id"))%>%filter(party=="D")%>%filter(is_weekday=='Weekday')%>%arrange(desc(amount))%>%select(amount)
## 5
dl=read.csv("/Users/gunnvantsaini/Desktop/Bootcamp 5/Data Manipulation R2/Data/dl.csv")
View(dl)
a=dl$experience
a
a=as.character(a)
a=="Experience not listed"
a[a=="Experience not listed"]
a=a[!a=="Experience not listed"]
a
strsplit(a,"-")
s=strsplit(a,"-")
for(i in s)
{print(i)}
a
a=gsub("yrs","",a)
s=strsplit(a,"-")
for(i in s)
{print(i)}
s
s[[1]]
s[[1]][1]
s[[1]][2]
for(i in 1:49)
{
print(s[[i]][1])
}
for(i in 1:49)
{
print(s[[i]][2])
}
l=NULL
l=NULL
for(i in 1:49)
{
l[i]=s[[i]][2]
}
l
s
l=NULL
for(i in 1:49)
{
l[i]=s[[i]][1]
}
l
s
# How to create a cell/unit vector
Age=23
Age
Age
age
age<-25
agw
age
Gender<-"M"
Gender
gender='M'
gender
# How to create a row/column: vector
Age=(21,22,23,24,25)
23
24
"a"
23,24
c(23,24)
c(23,24,25)
# How to create a row/column: vector
Age=c(21,22,23,24,25)
Age
City=c("Delhi","Blr","Blr","Blr","Blr")
City
Age[4]
## Extract data at 1st and 5th position
Age[1,4]
1
4
1,4
c(1,4)
## Extract data at 1st and 5th position
Age[c(1,4)]
## Extract data at 1st and 5th position
Age[c(1,5)]
## index by name
Age
names(Age)=c("One","Two","Three","Four","Five")
Age
Age['Three']
Age[c("Two","Five")] #Vector[Vector of names of positions]
## Index using logical vector
test=c(TRUE,TRUE,FALSE,FALSE,FALSE)
test
Age[c(TRUE,TRUE,FALSE,FALSE,TRUE)]
Age
Age[c(TRUE,TRUE,FALSE,FALSE,FALSE)]
Age<23
ind=Age<23
ind
Age[ind]
Age[Age<23]
Age<23
Age<24
Age[Age<24]
##
test1=c(23,89,"abc","def")
test1
## Table::Dataframe
table=data.frame(Age=Age,City=City,Test=test)
table
# dataframe[index_row,index_cols]
table[c(1,5),c(2,3)]
names(table)
table[c(1,5),c("City","Test")]
# dataframe[index_row,index_cols]
table[c(1,5),c(2,3)]
## I want row 1 and 5 across all columns
table[c(1,5),c(1,2,3)]
table[c(1,5),]
table[,]
table[,c("Age","Test")]
table[c(1,5)]
table[c(1,3)]
##
table$Age
table$Test
##
table$Age[c(1,3)]
new_table=table
rm(table)
## read in a flat file
new_table
## read in a flat file
names(new_table)
## read in a flat file
names(new_table)[1]="age"
new_table
## read in a flat file
table=read.table("/Users/gunnvantsaini/Data/Kaggle/career_data.csv",sep=",",header=TRUE)
## read in a flat file
table=read.table("/Users/gunnvantsaini/Data/Kaggle/ted-data/ted_main.csv",sep=",",header=TRUE)
## read in a flat file
#table=read.table("/Users/gunnvantsaini/Data/Kaggle/ted-data/ted_main.csv",sep=",",header=TRUE)
table=read.csv("/Users/gunnvantsaini/Data/Kaggle/ted-data/ted_main.csv")
View(table)
View(table)
## Data import from a flat file:
# Must know the delimeter used in the file
# How the missing data is coded in the raw file
# NA=Missing values
data=read.csv("/Users/gunnvantsaini/Data/Work/Python Trainings/BasicPythonDataScience/Data/sample2.csv")
View(data)
summary(data)
data2=read.table("/Users/gunnvantsaini/Data/Work/Python Trainings/BasicPythonDataScience/Data/sample1.txt",sep="\t",header=TRUE)
View(data2)
View(data2)
summary(data2)
str(data2)
?read.csv
data2=read.table("/Users/gunnvantsaini/Data/Work/Python Trainings/BasicPythonDataScience/Data/sample1.txt",sep="\t",header=TRUE,na.strings = c("","Missing"))
summary(data2)
data2
install.packages("dplyr")
### Data manipulation:
library(dplyr)
data=read.csv("/Users/gunnvantsaini/Data/Work/Python Trainings/BasicPythonDataScience/Data/oj.csv")
View(data)
View(data)
View(data)
View(data)
View(data)
data$brand=='tropicana'
# All the rows where brand sold is tropicana and feat takes a value of 1
data[data$brand=='tropicana'&data$feat==1,]
## Filter using dplyr
#
filter(data,brand=='tropicana')
data%>%filter(brand=='tropicana'&feat==1)
data%>%filter(brand=='tropicana'&feat==1)
# New table?
t1=data%>%filter(brand=='tropicana'&feat==1)
t2=filter(data,brand=='tropicana'&feat==1)
View(data)
data[,c("brand","week")]
# dplyr
select(data,brand,week)
# Using pip operator?
data%>%select(brand,week)
# Combine the filter and selection tasks
# I want to know the weeks and the INCOME when the brand sold was tropicana?
data%>%filter(brand=='tropicana')%>%select(week,INCOME)
data%>%filter(brand=='tropicana'&feat==0)%>%select(week)
## sort data
# dplyr
# Weeks where price was highest
data%>%arrange(desc(price))
## sort data
# dplyr
# Weeks where price was highest
data%>%arrange(desc(price))%>%select(week)
## sort data
# dplyr
# Weeks where price was highest
data%>%arrange(desc(price))%>%select(week)%>%head(1)
# 10 Stores which sold the dominicks at the highest price when feat=1?
data%>%filter(brand=='dominicks'&feat==1)%>%arrange(desc(price))%>%select(store)%>%head(10)
## How to create a pivot? group by+aggregations
# What is average price by feat column?
data%>%group_by(feat)%>%summarise(mean(price))
# What is the average price by brand?
data%>%group_by(brand)%>%summarise(mean(price))
# What is the average price by both brand and feat?
data%>%group_by(brand,feat)%>%summarise(mean(price))
# What is the average and max price by both brand and feat?
data%>%group_by(brand,feat)%>%summarise(mean(price),max(price))
# What is the average and max price by both brand and feat?
data%>%group_by(brand,feat)%>%summarise(mean(price),max(price),min(AGE60))
require(devtools)
install_github("slidify", "ramnathv")
install_github('slidify', 'ramnathv')
install_github('ramnathv/slidify')
install_github('ramnathv/slidify')
## basic visualizations using ggplot2
data=read.csv("https://s3.us-east-2.amazonaws.com/datafaculty/chicago/chicago.csv")
head(data)
## grammatical elements
# aes: x temp,y:dewpoint,color:season
# Create an asthetic map programmatically
library(ggplot2)
p<-ggplot(data,aes(x=temp,y=dewpoint,color=season))
p
# We combine the aesthetic map with geoms
p+geom_point()
p
# We combine the aesthetic map with geoms
p+geom_point()
head(data)
## Create an aes map
p<-ggplot(data,aes(x=temp))
p+geom_histogram()
## Create an aes map
p<-ggplot(data,aes(x=temp),color='pink')
p+geom_histogram()
## Create an aes map
p<-ggplot(data,aes(x=temp),colour='pink')
p+geom_histogram()
## Create an aes map
p<-ggplot(data,aes(x=temp))
p+geom_histogram(colour='pink')
p+geom_histogram(colour='pink',fill='pink')
p+geom_histogram(colour='black',fill='pink')
p+geom_histogram(colour='black',fill='pink',bins = 50)
p<-ggplot(data,aes(x=temp),color='pink')
p+geom_histogram()
p<-ggplot(data,aes(x=temp))
p+geom_histogram(color='pink')
p<-ggplot(data,aes(x=temp))
p+geom_histogram(color='black',fill='pink')
p<-ggplot(data,aes(x=temp))
p+geom_histogram(color='black',fill='pink',stat='bin')
p<-ggplot(data,aes(x=temp))
p+geom_histogram(color='black',fill='pink')
############# DM data ################
dm=read.csv("https://s3.us-east-2.amazonaws.com/datafaculty/wipro/DirectMarketing.csv")
head(dm)
## I wanted to understand how salary and amountspent are related to each other?
# aes map?
# x:salary,y:amountspent
p<-ggplot(dm,aes(x=Salary,y=AmountSpent))
p+geom_point()
# How salary and amountspent are related by gender?
p<-ggplot(dm,aes(x=Salary,y=AmountSpent,colour=Gender))
p+geom_point()
# Distribution of AmountSpent?
p<-ggplot(dm,aes(x=AmountSpent))
p+geom_histogram()
p<-ggplot(dm,aes(x=Salary))
p+geom_histogram()
# Distribution of AmountSpent by gender?
p<-ggplot(dm,aes(x=Salary))
p<-ggplot(dm,aes(x=Salary,fill=Gender))
p+geom_histogram()
p+geom_histogram()+facet_grid(Gender~.)
ch<-read.csv("https://s3.us-east-2.amazonaws.com/datafaculty/chicago/chicago.csv")# Air pollution study data: Chicago
rm(data)
p3<-ggplot(ch,aes(x=temp))
p3+geom_histogram(colour="black",fill="pink")
p3+geom_histogram(colour="black",aes(fill=season),alpha=0.4,position = "dodge")
p3+geom_histogram(colour="black",aes(fill=season),alpha=0.4,position = "dodge")+facet_grid(season~.)
p<-ggplot(ch,aes(x=temp,y=dewpoint,colour=season))
#Using geoms to draw appropriate graphs
#Adding title, xlabels and ylabels
p+geom_point()+ggtitle("Plot between Temperature and Dewpoint")+xlab("Temperature(F)")+ylab("Dewpoint(F)")
p+geom_point(colour="green")+ggtitle("Plot between Temperature and Dewpoint")+xlab("Temperature(F)")+ylab("Dewpoint(F)")
p1<-ggplot(ch,aes(x=temp))
p1+geom_density(colour="red")
p1+geom_density(aes(colour=season),stat="density")
p1+geom_density(aes(fill=season,colour=season),stat="density",alpha=0.2)
p1+geom_density(aes(fill=season,colour=season),alpha=0.2)+facet_grid(season~.)
p2<-ggplot(ch,aes(season,temp))
p2+geom_boxplot(aes(colour=season))
p3<-ggplot(ch,aes(x=temp))
p3+geom_histogram(colour="black",fill="pink")
p3+geom_histogram(colour="black",aes(fill=season))
p3+geom_histogram(colour="black",aes(fill=season),alpha=0.4,position = "dodge")+facet_grid(season~.)
data=read.csv("https://s3.us-east-2.amazonaws.com/datafaculty/oj.csv")
class(data)
## Data Manipulation
# 10 rows in data
head(data,10)
# The subset of data wheretropicana brand occurs
data$brand=='troipcana'
# The subset of data wheretropicana brand occurs
data[data$brand=='tropicana',]
# The subset of data wheretropicana brand occurs
length(data[data$brand=='tropicana',])
nrow(data[data$brand=='tropicana',])
# Count the number of times tropicana occurs?
## Subset the data where brand is tropicana and feat has a value of 1?
data[data$brand == 'tropicana' & data$feat == 1 ,]
length(data[data$brand=='tropicana',])
##
library(readxl)
# Count the number of times tropicana occurs?
## Subset the data where brand is tropicana and feat has a value of 1?
dim(data[data$brand == 'tropicana' & data$feat == 1 ,])
##
#library(readxl)
#read_excel("path to excel file")
library(dplyr)
filter(data,brand=="tropicana"&feat==1)
data%>%filter(brand=='tropicana'&feat==1)
data%>%select(store,price)
## I want to see the stores and the prices when brand=tropicana and feat is 1
head(data)
# Scenario where I write my code without pip (%>%)
filter(data,brand=='tropicana'&feat==1)
# Scenario where I write my code without pip (%>%)
sub_data=filter(data,brand=='tropicana'&feat==1)
select(sub_data,store,price)
# Scenario where I use %>% operator
data%>%filter(brand=='tropicana'&feat==1)
# Scenario where I use %>% operator
data%>%filter(brand=='tropicana'&feat==1)%>%select(store,price)
# Scenario where I use %>% operator
data%>%filter(brand=='tropicana'&feat==1)%>%select(store,price)%>%head(20)
data%>%head()
# Scenario where I use %>% operator
data%>%filter(brand=='tropicana'&feat==1)%>%select(store,price)
data%>%filter(brand=='tropicana'&feat==1)%>%select(store,price)
# Scenario where I use %>% operator
data%>%filter(brand=='tropicana'&feat==1)%>%select(store,price)%>%arrange(desc(price))
head(data)
## Wanted to know what is the average Age by feat
unique(data$feat)
data%>%group_by(feat)%>%summarise(mean(AGE60))
data%>%group_by(feat,brand)%>%summarise(mean(AGE60))
data%>%group_by(feat,brand)%>%summarise(mean(AGE60),mean(INCOME))
data%>%group_by(feat,brand)%>%summarise(Mean_age=mean(AGE60),Mean_inc=mean(INCOME))
iris
?typeof
a=c(1,2,3,4,5)
a^2
library(readr)
data=read_csv("/Users/gunnvantsaini/Documents/Work/Jigsaw Academy/Corp_reporting/novonordisk/15_Jan_13_08_Progress-DSP.csv")
str(data)
library(slidify)
setwd("/Users/gunnvantsaini/Documents/Work/Jigsaw Academy/Corporate Trainings/nimhans")
author("Text Mining")
